-- Trigger para fazer com que ao sincronizar um item com diferenca seja atualizado na GEM
CREATE OR REPLACE FUNCTION public.atualiza_diferenca_gweb() RETURNS trigger AS
$BODY$
DECLARE
_itens_end record;
BEGIN
IF(TG_OP='INSERT') THEN
-- Tratando diferença para menos
--  GARANTINDO QUE SO VAI ATUALIZAR O CAMPO quantidade_diferenca 1 VEZ
    IF (NEW.quantidade_diferenca is not null) THEN
          IF ((SELECT quantidade_diferenca FROM itens_logistica WHERE id = NEW.item_logistica_id ) = 0.00) THEN
              UPDATE itens_logistica SET quantidade_diferenca = new.quantidade_diferenca WHERE id = new.item_logistica_id;
          END IF;
    -- EXCLUINDO OS PALLETS E ENDEREÇAMENTOS CASO SOBRE UMA QUANTIDADE EQUIVALENTE A UM PALLET (NOTA VEIO COM FALTA)
          IF (NEW.pallets_deletados IS NOT NULL) THEN

		FOR _itens_end IN (SELECT item_enderecamento_id FROM pallets_itens_enderecamento WHERE pallet_id in (SELECT unnest(NEW.pallets_deletados)))
		LOOP

			UPDATE pallets_itens_enderecamento set item_enderecamento_id = null WHERE _itens_end.item_enderecamento_id; = item_enderecamento_id;
			DELETE FROM itens_enderecamento WHERE id = _itens_end.item_enderecamento_id;


		END LOOP;

		DELETE FROM pallets_itens_enderecamento where pallet_id IN (SELECT unnest(NEW.pallets_deletados));

          END IF;
   END IF;
END IF;
RETURN NEW;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;

-- DROP TRIGGER IF EXISTS vatualiza_diferenca_gweb ON itens_logistica_conferencia_coletor ;
-- CREATE TRIGGER atualiza_diferenca_gweb BEFORE INSERT ON itens_logistica_conferencia_coletor FOR EACH ROW EXECUTE PROCEDURE atualiza_diferenca_gweb();


-- ALTERACAO NA TABELA itens_logistica_conferencia_coletor PARA RECEBER OS PALLETS DELETADOS

ALTER TABLE itens_logistica_conferencia_coletor ADD COLUMN PALLETS_DELETADOS INTEGER ARRAY
SELECT  * from pallets where id in (SELECT unnest(pallets_deletados) from itens_logistica_conferencia_coletor WHERE pallets_deletados is not null)
